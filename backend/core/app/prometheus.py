from prometheus_client import CollectorRegistry, Gauge, push_to_gateway
import os
from .bicep_utils.models.ids_base import Alert



async def push_metrics_to_prometheus(data, container_name: str, ensemble_name: str=None):
    prometheusUrl = os.environ.get('PROMETHEUS_URL')
    registry = CollectorRegistry()
    cpu_gauge = Gauge('container_cpu_usage', 'CPU usage of the container', ['container', 'ensemble'], registry=registry)
    memory_gauge = Gauge('container_memory_usage', 'Memory usage of the container', ['container', 'ensemble'], registry=registry)

    cpu_gauge.labels(container=container_name, ensemble=ensemble_name).set(data["cpu_usage"])
    memory_gauge.labels(container=container_name, ensemble=ensemble_name).set(data["memory_usage"])
            
    push_to_gateway(prometheusUrl, job='container_metrics', registry=registry)


# TODO 10: can we actually display logs in grafana? and what about prometheus ? only FPR etc. t send or "more" like logs
async def push_alerts_to_prometheus(alerts: list[Alert], analysis_type: str , container_name: str, ensemble_name: str=""):
    prometheusUrl = os.environ.get('PROMETHEUS_URL')
    # registry = CollectorRegistry()
    # alerts = Gauge('ids_alerts', 'Alerts generated by the IDS', ['container', 'ensemble'], registry=registry)
    # memory_gauge = Gauge('container_memory_usage', 'Memory usage of the container', ['container', 'ensemble'], registry=registry)

    # cpu_gauge.labels(container=container_name, ensemble=ensemble_name).set(data["cpu_usage"])
    # memory_gauge.labels(container=container_name, ensemble=ensemble_name).set(data["memory_usage"])
            
    # push_to_gateway(prometheusUrl, job='container_metrics', registry=registry)


# TODO 10: implement function to send metrics
async def push_evaluation_metrics_to_prometheus():
    pass